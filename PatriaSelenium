import pandas as pd

from tkinter import *

from tkinter import messagebox

pd.options.mode.chained_assignment = None

from selenium import webdriver

import pandas as pd

import time

import os

from selenium.common.exceptions import NoSuchElementException

pd.options.mode.chained_assignment = None

from selenium.webdriver.common.by import By

from selenium.webdriver.support.ui import WebDriverWait

from selenium.webdriver.support import expected_conditions as ec

import getpass

 

 

# cronometrar tempo da execução

start = time.time()

 

# abre o excel

x1 = pd.ExcelFile(r'<path>))

 

# lê os dados e armazena em dataFrame

df = x1.parse("Planilha1")

 

 

# cabeçalho para rodar

chrome_options = webdriver.ChromeOptions()

flags_i_want = ['cookies-without-same-site-must-be-secure@2', 'same-site-by-default-cookies@2']

 

 

prefs = {'download.default_directory' : r'<path>)}

 

 

def botao():

    root = Tk()

    root.title("Login Itau Custodia")

    root.geometry("300x110")

 

    def Ok():

        global uname

        global password

 

        uname = e1.get()

        password = e2.get()

 

        root.destroy()

 

 

    def on_closing():

        if messagebox.askokcancel("Sair", "Você deseja sair?\nIsso irá parar o programa"):

            root.destroy()

 

            exit()

 

 

    root.protocol("WM_DELETE_WINDOW", on_closing)

 

 

    def func(event):

        global uname

        global password

 

        uname = e1.get()

        password = e2.get()

 

        root.destroy()

    root.bind('<Return>', func)

 

    global e1

    global e2

 

    Label(root, text="Funcional").place(x=10, y=10)

    Label(root, text="Senha").place(x=10, y=40)

    Label(root, text="Pressione ENTER ou clique em Login").place(x=10, y=70)

 

    e1 = Entry(root)

    e1.insert(END, 'itauf.')

    e1.place(x=140, y=10)

 

   e2 = Entry(root)

    e2.place(x=140, y=40)

    e2.config(show="*")

 

    Button(root, text="Login", command=Ok,height=1, width=5).place(x=220, y=70)

    root.mainloop()

 

 

botao()

 

# caminho do chromedrive, site e label=nome do site na aba

browser = webdriver.Chrome(executable_path=r'<path>', options=chrome_options)

 

 

browser.command_executor._commands["send_command"] = ("POST", '/session/$sessionId/chromium/send_command')

params = {'cmd': 'Page.setDownloadBehavior', 'params': {'behavior': 'allow', 'downloadPath': r'<path>)}}

command_result = browser.execute("send_command", params)

 

 

 

browser.get('<path>')

assert 'Serviços para o Mercado de Capitais BRT'.strip() in browser.title.strip()

 

# Logar - Usuario e senha - SUBSTITUIR PELO # esperar usuario logar

browser.find_element_by_xpath("/html/body/div[2]/div/div[2]/div/form/table/tbody/tr[1]/td[2]/input").send_keys(uname)  #usuario "itauf."

browser.find_element_by_xpath("/html/body/div[2]/div/div[2]/div/form/table/tbody/tr[2]/td[2]/input").send_keys(password) #senha

browser.find_element_by_xpath("/html/body/div[2]/div/div[2]/div/form/table/tbody/tr[2]/td[3]/a[1]/img").click()

 

 

browser.get(<path>)

 

 

 

for row, dfr in df.iterrows():

    #global gestor1

    cotista = dfr['cotista']

    cotistaSTR = str(cotista)

    print(cotistaSTR)

 

    agencia = cotistaSTR[:4]

    conta = cotistaSTR[4:]

    dac = cotistaSTR[11:]

    print(agencia)

    print(conta)

    print(dac)

 

 

    # Colocar o cotista

    browser.find_element_by_xpath("/html/body/form[2]/div/div/table/tbody/tr[2]/td[2]/input").send_keys("{}{}{}".format(agencia, conta, dac))

 

    # Apertar no Continuar

    browser.find_element_by_xpath("/html/body/form[2]/div/div/table/tbody/tr[6]/td/a/img").click()

 

 

    # Esperar pagina carregar

    wait = WebDriverWait(browser, 9000)

    element = wait.until(

        ec.visibility_of_all_elements_located((By.XPATH, '/html/body/div/table/tbody/tr/td[7]/font/a')))

    print("Carregou")

 

 

    try:

        espera = browser.find_element_by_xpath("/html/body/form[2]/div/table/tbody/tr[3]/td[2]/b")

 

 

        if espera.is_displayed():

            print("\nProx")

            browser.get(<path>)

            time.sleep(2)

 

 

 

        continue

    except NoSuchElementException:

        print("Continua")

 

    # Apertar no ExtratoMensal

    browser.find_element_by_xpath("/html/body/form[2]/div/div/div[5]/div/h2").click()

 

 

 

    # Ler a tabela da pagina

    linhas = browser.find_element_by_xpath("/html/body/form[2]/div/div/div[5]/div/div/table")

    i = 0

 

 

 

    # Contar as linhas da pagina, para saber onde o valor esta

    for row1 in linhas.find_elements_by_xpath(".//tr"):

        i += 1

 

        #print(linhas.text)

        # Quando achar o valor, clicar no XPATH relativo ao numero que ele contou das linhas na tabela

        # if achar.text in row1.text:

        #     print("TEM")

        print(i)

 

 

 

 

 

    print("\nclicar")

    print(i)

    #Contador I, sempre cai contar até a ultima linha, q sempre será o  ultimo mes disponivel, isar a variavel I no xpath

    browser.find_element_by_xpath("/html/body/form[2]/div/div/div[5]/div/div/table/tbody/tr[{}]/td[4]/b/a".format(i)).click()

 

    browser.switch_to_alert().accept()

 

 

 

    # Clicar para baixar o ultom Extrato disponivel

    #browser.find_element_by_xpath("/html/body/form[2]/div/div/div[5]/div/div/table/tbody/tr[8]/td[4]/b/a").click()

    #time.sleep(2)

    #time.sleep(2)

    #browser.find_element_by_xpath("/html/body/form[2]/div/div/div[5]/div/div/table/tbody/tr[8]/td[4]/b/a").send_keys(Keys.ENTER)

 

 

 

    #time.sleep(2)

 

    # Buscar Cotista

    #cotista_web = browser.find_element_by_xpath('/html/body/form[2]/div/div/table[1]/tbody/tr[4]/td[2]/b')

    #print(cotista_web)

 

    print("202110{}00{}{}.pdf'".format(agencia, conta, dac))

 

    # TODO colocar condicao de quando nao tiver o cotista, usar try  Não existem extratos disponíveis.

 

    try:

        if os.path.exists(r'<path>s\202110{}00{}{}.pdf'.format(getpass.getuser(), agencia, conta, dac)):

            print("\n")

            print("baixou antes")

            while not os.path.exists(r'<path>\202110{}00{}{}.pdf'.format(getpass.getuser(), agencia, conta, dac)):

                time.sleep(1)

                print("\nachou")

    except:

        print("exp")

 

    browser.get(<path>)

    print("ir para prox")
